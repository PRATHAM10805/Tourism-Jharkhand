{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/api/wikipedia/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const query = searchParams.get('query');\n\n  if (!query) {\n    return NextResponse.json({ error: 'Query parameter is required' }, { status: 400 });\n  }\n\n  const url = `https://en.wikipedia.org/w/api.php?action=query&format=json&prop=extracts|pageimages|info&exintro=true&explaintext=true&titles=${encodeURIComponent(query)}&pithumbsize=500&inprop=url`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const pages = data.query.pages;\n    const pageId = Object.keys(pages)[0];\n\n    if (pageId === '-1') {\n      return NextResponse.json({ error: 'No content found for this query' }, { status: 404 });\n    }\n\n    const page = pages[pageId];\n    const extract = page.extract;\n    const thumbnail = page.thumbnail?.source;\n    const fullurl = page.fullurl;\n\n    if (extract) {\n      return NextResponse.json({ extract, thumbnail, fullurl });\n    } else {\n      return NextResponse.json({ error: 'No content found for this query' }, { status: 404 });\n    }\n  } catch (error) {\n    return NextResponse.json({ error: 'Failed to fetch data from Wikipedia' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEO,eAAe,IAAI,GAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,QAAQ,aAAa,GAAG,CAAC;IAE/B,IAAI,CAAC,OAAO;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA8B,GAAG;YAAE,QAAQ;QAAI;IACnF;IAEA,MAAM,MAAM,CAAC,+HAA+H,EAAE,mBAAmB,OAAO,2BAA2B,CAAC;IAEpM,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,MAAM,QAAQ,KAAK,KAAK,CAAC,KAAK;QAC9B,MAAM,SAAS,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;QAEpC,IAAI,WAAW,MAAM;YACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAkC,GAAG;gBAAE,QAAQ;YAAI;QACvF;QAEA,MAAM,OAAO,KAAK,CAAC,OAAO;QAC1B,MAAM,UAAU,KAAK,OAAO;QAC5B,MAAM,YAAY,KAAK,SAAS,EAAE;QAClC,MAAM,UAAU,KAAK,OAAO;QAE5B,IAAI,SAAS;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE;gBAAS;gBAAW;YAAQ;QACzD,OAAO;YACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAkC,GAAG;gBAAE,QAAQ;YAAI;QACvF;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAsC,GAAG;YAAE,QAAQ;QAAI;IAC3F;AACF"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}